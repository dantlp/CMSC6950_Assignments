1. How many earthquakes are listed in the table?
wc -l signif.txt.tsv
5959
2. How many columns are in the table?
head -n 1 signif.txt.tsv | wc -w
47
3. Use the cut command to create a new file that just has the data from the columns for YEAR, EQ_PRIMARY and COUNTRY. Hint: you can get the column numbers by using the head command to view the first row and then visually count the column numbers for the above fields (there is also a unix command to do this, but we didn't cover it in class). Call the new data file 'Year_Mag_Country.tsv'. You can use 'Year_Mag_Country.tsv' for the rest of the exercises below.
cut -f3,10,18 -d$'\t' signif.txt.tsv > Year_Mag_Country.tsv
4. EQ_PRIMARY is the assigned earthquake magnitude. With your new file 'Year_Mag_Country.tsv', sort the data based on the numeric value of the EQ_PRIMARY column, then list the lines for the top ten largest earthquakes.
sort -k 2n Year_Mag_Country.tsv | tail
5. How many unique countries are listed in the database? Use cut,sort,uniq, wc and a few pipes | to form a single expression that answers this question.
cut -f3 Year_Mag_Country.tsv |sort -k 1 | uniq -c| wc -l
154
6. Use the grep command to count how many earthquakes in the database are located in the USA or USA TERRITORY.
sort -k 3 Year_Mag_Country.tsv |cut -f3 |grep -i "USA" | wc -l
7. Expanding on the previous exercise, refine your command sequence so that it only counts earthquakes in the USA and not ones in USA TERRITORY. Hint: use the -v argument with grep and you may need to call grep more than once.
sort -k 3 Year_Mag_Country.tsv |cut -f3 |grep -v "TERRITORY" |grep -i "USA" |wc -l
255
8. Compute the total number of earthquakes in each country and then display the top ten countries along with the number of earthquakes. Hint: this can be done with a command sequence similar to exercise 5, but requires a specific argument to be used with uniq.
cut -f3 Year_Mag_Country.tsv |sort -k 3 | uniq -c
9. Create a shell script named countEq.sh that returns the total number of earthquakes for a given country, where the country is specified as the option when calling the script. Hint: see the Shell Script notes and use the special variable $1. Paste your script below and give an example calling sequence for country USA.
nano countEq.sh
cut -f3 Year_Mag_Country.tsv |sort -k 3 | uniq -c| grep -i "$1"
bash countEq.sh "USA"
    255 USA
     39 USA TERRITORY
10. Create a shell script named countEq_getLargestEq.sh that returns both the total number of earthquakes AND the largest earthquake for a given country, where the country is specified as the option when calling the script. Use the echo command before each command to create labels for each returned value. Paste your script below and give an example calling sequence for country CHILE.
nano countEq_getLargestEq.sh
    echo "Total Earthquakes";
    cut -f3 Year_Mag_Country.tsv |sort -k 3 | uniq -c| grep -i "$1";
    echo "Top 10 Earthquakes";
    echo -e "Year \tMag \tCountry"
    sort -k 2n Year_Mag_Country.tsv | grep -i "$1"| tail
bash countEq_getLargestEq.sh "CHILE"
11. Compute the total number of earthquakes each year and then output a sorted list of the top ten years with the most earthquakes. Paste your command and the top ten list below.
nano EQlist_andTop10.sh
    echo "Total Earthquakes per year";
    cut -f1 Year_Mag_Country.tsv |uniq -c| sort -k 2n;
    echo "Top Ten years with most Earthquakes";
    cut -f1 Year_Mag_Country.tsv |uniq -c| sort -k 1nr| head
bash nano EQlist_andTop10.sh
12. Create a shell script that loops over the top ten years with the most earthquakes (from exercise 11), finds all the earthquakes for a given year and writes them to file named $YEAR-earthquakes.txt, where $YEAR is the for loop variable assigned from the top ten list. Your code should output ten different files (one for each year in the top ten list). Hints: Take your answer from exercise 11 and extract the year column, then use this for the range in a for loop by inserting them like this for YEAR in $(insert code that lists top ten years here). The rest is just a grep and a redirect > to a file with the correct name.
nano Looptop10EQ.sh
    cut -f 1 Year_Mag_Country.tsv |uniq -c| sort -k 1nr| head > Top_10_Years_EQ.txt;
    awk '{print $2}' Top_10_Years_EQ.txt > x.txt
    while read -r year; do
    sort -k 2n Year_Mag_Country.tsv|sort -k 2nr |grep -i "$year"> "$year".earthquakes.txt
    done< x.txt
bash Looptop10EQ.sh